#!/bin/bash

echo "mounting docker volumes"
DOCKER_VOL_DEVICE_NAME=/dev/nvme2n1
DOCKER_VOL_DIR=/var/lib/docker/volumes

# only format if the volume is unformated, if we are restoring from snapshot we don't want to format
FS_TYPE=$(file -s $DOCKER_VOL_DEVICE_NAME | grep xfs)
if [ -z "$${FS_TYPE}" ]; then
  mkfs -t xfs $DOCKER_VOL_DEVICE_NAME
fi
mkdir -p $DOCKER_VOL_DIR
mount $DOCKER_VOL_DEVICE_NAME $DOCKER_VOL_DIR

# update /etc/fstab docker volumes mount
BLOCK_ID=$(blkid $DOCKER_VOL_DEVICE_NAME)
UUID=$(echo "$BLOCK_ID" | cut -d ' ' -f 2 | sed -n 's/.*"\([^"]*\)".*/\1/p')
FS_TYPE=$(echo "$BLOCK_ID" | cut -d ' ' -f 3 | sed -n 's/.*"\([^"]*\)".*/\1/p')
FSTAB_ENTRY="UUID=$UUID  $DOCKER_VOL_DIR  $FS_TYPE  defaults,nofail  0  2"
echo $FSTAB_ENTRY >> /etc/fstab

# Quick fix - when docker restarts, it umount above device from mount point (/var/lib/docker/volumes) which leads to use root volume.
# So adding this line in file, helps to re-mount volume whenever restart happens. Issue link: https://github.com/moby/moby/issues/39267
echo "cd ~ && mount -a" | sudo tee -a /usr/libexec/docker/docker-setup-runtimes.sh

sudo systemctl daemon-reload
sudo service docker start
sudo service ecs start

echo "ECS_CLUSTER=${cluster_name}" >> /etc/ecs/ecs.config
echo "ECS_LOGLEVEL=debug" >> /etc/ecs/ecs.config
echo "ECS_CONTAINER_INSTANCE_TAGS=${jsonencode(tags)}" >> /etc/ecs/ecs.config
echo "ECS_ENABLE_TASK_IAM_ROLE=true" >> /etc/ecs/ecs.config

## Docker image cleanup
#https://github.com/aws/amazon-ecs-agent/blob/master/README.md#environment-variables
#https://docs.aws.amazon.com/es_es/AmazonECS/latest/developerguide/automated_image_cleanup.html
echo "ECS_ENGINE_TASK_CLEANUP_WAIT_DURATION=10m" >> /etc/ecs/ecs.config
echo "ECS_DISABLE_IMAGE_CLEANUP=false" >> /etc/ecs/ecs.config
echo "ECS_IMAGE_CLEANUP_INTERVAL=20m" >> /etc/ecs/ecs.config
echo "ECS_IMAGE_MINIMUM_CLEANUP_AGE=20m" >> /etc/ecs/ecs.config
echo "ECS_NUM_IMAGES_DELETE_PER_CYCLE=10" >> /etc/ecs/ecs.config

# get metadata values
echo "pulling docker images"
TOKEN=$(curl -X PUT "http://169.254.169.254/latest/api/token" -H "X-aws-ec2-metadata-token-ttl-seconds: 21600")
AVAILABILITY_ZONE=$(curl -s http://169.254.169.254/latest/meta-data/placement/availability-zone -H "X-aws-ec2-metadata-token: $TOKEN")
REGION=$(echo $AVAILABILITY_ZONE | sed 's/[a-z]$//')
aws ecr get-login-password --region $REGION | docker login --username AWS --password-stdin 026589913916.dkr.ecr-fips.$REGION.amazonaws.com
docker pull 026589913916.dkr.ecr-fips.$REGION.amazonaws.com/lifebit-platform/jupyter-notebook:v2.7.0
docker pull 026589913916.dkr.ecr-fips.$REGION.amazonaws.com/lifebit-platform/data-downloader:v1.9.3
docker pull 026589913916.dkr.ecr-fips.$REGION.amazonaws.com/lifebit-platform/spot-instance-preemption-monitor:v1.0.3

echo "Installing tenable nessus agent"
/install_tenable_nessus_agent.sh